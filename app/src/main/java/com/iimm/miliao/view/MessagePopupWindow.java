package com.iimm.miliao.view;import android.content.Context;import android.content.res.ColorStateList;import android.graphics.Color;import android.graphics.drawable.ColorDrawable;import android.support.v4.app.FragmentActivity;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.view.WindowManager;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.LinearLayout.LayoutParams;import android.widget.PopupWindow;import android.widget.TextView;import com.iimm.miliao.R;import com.iimm.miliao.ui.base.CoreManager;public class MessagePopupWindow extends PopupWindow {    public MessagePopupWindow(            final FragmentActivity context,            OnClickListener itemsOnClick,            CoreManager coreManager    ) {        super(context);        boolean cannotCreateGroup = coreManager.getLimit().cannotCreateGroup();        boolean cannotSearchFriend = coreManager.getLimit().cannotSearchFriend();        boolean displayRedPacket = coreManager.getConfig().displayRedPacket;        boolean disableLocationServer = coreManager.getConfig().disableLocationServer;        LayoutInflater inflater = (LayoutInflater) context                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);        ViewGroup menuView = (ViewGroup) inflater.inflate(R.layout.popu_message, null);        View line_create_group = menuView.findViewById(R.id.line_create_group);        View line_face_group = menuView.findViewById(R.id.line_face_group);        View line_add_friends = menuView.findViewById(R.id.line_add_friends);        View line_scanning = menuView.findViewById(R.id.line_scanning);        View line_near_person = menuView.findViewById(R.id.line_near_person);        View line_receipt_payment = menuView.findViewById(R.id.line_receipt_payment);        // 白色背景，黑色文字图标，        ColorStateList foreground = ColorStateList.valueOf(Color.DKGRAY);        ColorStateList textColor = ColorStateList.valueOf(context.getResources().getColor(R.color.pop_win_text_color));        for (int i = 0; i < menuView.getChildCount(); i++) {            View child = menuView.getChildAt(i);            if (child instanceof LinearLayout) {                LinearLayout layout = (LinearLayout) child;                // 不允许建群时隐藏发起群聊按钮，                if (cannotCreateGroup &&                        (layout.getId() == R.id.create_group                                || layout.getId() == R.id.face_group)                ) {                    layout.setVisibility(View.GONE);                    if (line_create_group != null) {                        line_create_group.setVisibility(View.GONE);                    }                    if (line_face_group != null) {                        line_face_group.setVisibility(View.GONE);                    }                    continue;                }                // 不允许搜索时隐藏添加好友按钮，                if (cannotSearchFriend && layout.getId() == R.id.add_friends) {                    layout.setVisibility(View.GONE);                    if (line_add_friends != null) {                        line_add_friends.setVisibility(View.GONE);                    }                    continue;                }                // 关闭红包功能，隐藏收付款                if (displayRedPacket && layout.getId() == R.id.receipt_payment) {                    layout.setVisibility(View.GONE);                    if (line_receipt_payment != null) {                        line_receipt_payment.setVisibility(View.GONE);                    }                    continue;                }                // 关闭定位功能，隐藏附近的人                if (disableLocationServer && layout.getId() == R.id.near_person) {                    layout.setVisibility(View.GONE);                    if (line_near_person != null) {                        line_near_person.setVisibility(View.GONE);                    }                    continue;                }                layout.setOnClickListener(itemsOnClick);                for (int j = 0; j < layout.getChildCount(); j++) {                    View lChild = layout.getChildAt(j);                    if (lChild instanceof ImageView) {                        //不動態 改變圖標顏色                        // ImageViewCompat.setImageTintList((ImageView) lChild, foreground);                    } else if (lChild instanceof TextView) {                        ((TextView) lChild).setTextColor(textColor);                    }                }            }        }        //设置SelectPicPopupWindow的View        this.setContentView(menuView);        //设置SelectPicPopupWindow弹出窗体的宽        this.setWidth(LayoutParams.WRAP_CONTENT);        // this.setWidth(ViewPiexlUtil.dp2px(context,200));        //设置SelectPicPopupWindow弹出窗体的高        this.setHeight(LayoutParams.WRAP_CONTENT);        //设置SelectPicPopupWindow弹出窗体可点击        this.setFocusable(true);        this.setOutsideTouchable(true);        //设置SelectPicPopupWindow弹出窗体动画效果        this.setAnimationStyle(R.style.Buttom_Popwindow);        //设置SelectPicPopupWindow弹出窗体的背景        // 透明背景，        this.setBackgroundDrawable(new ColorDrawable(0));        WindowManager.LayoutParams lp = context.getWindow().getAttributes();        lp.alpha = 0.7f;        context.getWindow().setAttributes(lp);        setOnDismissListener(new OnDismissListener() {            @Override            public void onDismiss() {                WindowManager.LayoutParams lp = context.getWindow().getAttributes();                lp.alpha = 1f;                context.getWindow().setAttributes(lp);            }        });    }}